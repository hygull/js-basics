*	Window Location
	The window.location object can be written without the window prefix.

	Some examples:

	window.location.href returns the href (URL) of the current page
	window.location.hostname returns the domain name of the web host
	window.location.pathname returns the path and filename of the current page
	window.location.protocol returns the web protocol used (http: or https:)
	window.location.assign loads a new document

	examples:

*	<script>
				function newDoc() {
			    	window.location.assign("http://www.w3schools.com")
				}
	</script>
	<body>
		<input type="button" value="Load new document" onclick="newDoc()">
	</body>

*	<script>
		function goBack() {
		    window.history.back() //Go to back page
		}
		function goForward() {
		    window.history.forward() //Go to forward page
		}
	</script>

*	The window.screen object contains information about the user's screen.

	Window Screen
	The window.screen object can be written without the window prefix.

	Properties:

	screen.width
	screen.height
	screen.availWidth
	screen.availHeight
	screen.colorDepth
	screen.pixelDepth

	The screen.width property returns the width of the visitor's screen in pixels.

*	Timing Events
	The window object allows execution of code at specified time intervals.

	These time intervals are called timing events.

	The two key methods to use with JavaScript are:

	setTimeout(function, milliseconds)
	Executes a function, after waiting a specified number of milliseconds.
	setInterval(function, milliseconds)
	Same as setTimeout(), but repeats the execution of the function continuously.
	The setTimeout() and setInterval() are both methods of the HTML DOM Window object.

*	The setTimeout() Method
	window.setTimeout(function, milliseconds);
	The window.setTimeout() method can be written without the window prefix.

	The first parameter is a function to be executed.

	The second parameter indicates the number of milliseconds before execution.

*	The setInterval() Method
	The setInterval() method repeats a given function at every given time-interval.

	window.setInterval(function, milliseconds);
	The window.setInterval() method can be written without the window prefix.

	The first parameter is the function to be executed.

	The second parameter indicates the length of the time-interval between each execution.

	This example executes a function called "myTimer" once every second (like a digital watch).

*	The window.clearTimeout() method can be written without the window prefix.

	The clearTimeout() method uses the variable returned from setTimeout():

	myVar = setTimeout(function, milliseconds);
	clearTimeout(myVar);

	If the function has not already been executed, you can stop the execution by calling the clearTimeout() method:

*	How to Stop the Execution?
	The clearInterval() method stops the executions of the function specified in the setInterval() method.

	window.clearInterval(timerVariable)
	The window.clearInterval() method can be written without the window prefix.

	The clearInterval() method uses the variable returned from setInterval():

	myVar = setInterval(function, milliseconds);
	clearInterval(myVar);

*	